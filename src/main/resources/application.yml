server:
  port: 8888
spring:
  kafka:
    bootstrap-servers: xxx.xxx.xxx.xxx:xxxx
    consumer:
      group-id: consumer-group
      instance:
        name: my-consumer
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: true
    template:
      default-topic: xxxxxxxxx

ems:
  api: http://xxx.xxx.xxx.xxx:xxxx
  linkName: paasta
  sendInfo: 'admin@test.co.kr'
  receiver: 'admin1@test.co.kr,admin2@test.co.kr'        # 메일 n개일 경우 띄어쓰기 없이 기입

ums:
  api: http://xxx.xxx.xxx.xxx:xxxx
  linkName: paasta
  sendNo: 01000000000
  receiver: 01000000000                # 01000000000, 01000000001 형식으로 기입

logging:
  level:
    root: INFO
    org.springframework: INFO
    org.apache.kafka: DEBUG

messaging:
  pool-size: 3
  try-count: 3
  timeout: 3600000
  ready-fixed-rate: 60000  # 1분
  ready-initial-delay: 3000
  progress-fixed-rate: 10000
  progress-initial-delay: 5000
  timeout-fixed-rate: 30000
  timeout-initial-delay: 1700